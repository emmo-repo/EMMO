@prefix : <https://w3id.org/emmo#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@base <https://w3id.org/emmo#> .

<https://w3id.org/emmo/perspectives/structural> rdf:type owl:Ontology ;
                                                 owl:versionIRI <https://w3id.org/emmo/1.0.0/perspectives/structural> ;
                                                 owl:imports <https://w3id.org/emmo/1.0.0/perspectives/perspective> ;
                                                 dcterms:abstract "Defines the structural perspective which defines an entity according to its type and the types of other entities mereological relations with it."@en ;
                                                 dcterms:contributor :FrancescoZaccarini ,
                                                                     :GerhardGoldbeck ,
                                                                     :JesperFriis ;
                                                 dcterms:creator :EmanueleGhedini ;
                                                 dcterms:license "https://creativecommons.org/licenses/by/4.0/legalcode" ;
                                                 dcterms:publisher <https://emmc.eu> ;
                                                 dcterms:title "Structural"@en ;
                                                 rdfs:comment "The EMMO requires HermiT reasoner plugin in order to visualize all inferences and class hierarchy (ctrl+R hotkey in Protege)."@en ;
                                                 owl:versionInfo "1.0.0" ;
                                                 :EMMO_1246b120_abbe_4840_b0f8_3e4348b24a17 "emmo@emmc.eu" .

#################################################################
#    Object Properties
#################################################################

###  https://w3id.org/emmo#EMMO_6786b336_e982_4759_8dee_1905a4106591
:EMMO_6786b336_e982_4759_8dee_1905a4106591 rdfs:domain :EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 .


#################################################################
#    Classes
#################################################################

###  https://w3id.org/emmo#EMMO_0914449c_ef24_4372_b669_9cdd13b59fed
:EMMO_0914449c_ef24_4372_b669_9cdd13b59fed rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
                                           skos:prefLabel "Minimal"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have no proper parts of the same type of the whole is proper part of an entity of that type."@en ;
                                           :EMMO_c7b62dd7_063a_4c2a_8504_42f7264ba83f "A minimal class M (subclass of Minimal) is defined by choosing a reference type φ so that M is subclass of φ, all parts of x are needed to keep φ(x) and x is proper part of a larger φ entity."@en .


###  https://w3id.org/emmo#EMMO_2dddfc30_d4e1_4e3e_a0ca_755c4d9d2cf4
:EMMO_2dddfc30_d4e1_4e3e_a0ca_755c4d9d2cf4 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 ;
                                           skos:prefLabel "Heap"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have at least two non overlapping proper parts of the same type of the whole."@en ;
                                           :EMMO_c7b62dd7_063a_4c2a_8504_42f7264ba83f "A heap class H (subclass of Heap) is defined by choosing a reference type φ, with H subclass of φ, so that each H entity has non overlapping φ parts."@en .


###  https://w3id.org/emmo#EMMO_32e701c0_a925_49df_9829_0931b8554807
:EMMO_32e701c0_a925_49df_9829_0931b8554807 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_49267eba_5548_4163_8f36_518d65b583f9 ;
                                           skos:prefLabel "Structural"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "A perspective that categorises causal structures according to the merelogical relations between the whole and the parts, taking into account their types."@en .


###  https://w3id.org/emmo#EMMO_40ff176a_e74d_46cc_88c5_6d02fd6813a7
:EMMO_40ff176a_e74d_46cc_88c5_6d02fd6813a7 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_e95b9f89_3ffd_4ea5_b682_97c4cc191a8d ;
                                           skos:prefLabel "NonNuclear"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have a proper parts of the same type φ of the whole, but have no φ proper part that is part of other φ proper parts."@en .


###  https://w3id.org/emmo#EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2
:EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_32e701c0_a925_49df_9829_0931b8554807 ;
                                           rdfs:seeAlso :EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 ;
                                           skos:altLabel "Lifetime"@en ,
                                                         "Maximal"@en ;
                                           skos:example """A marathon is an example of class whose individuals are always maximal since the criteria satisfied by a marathon 4D entity poses some constraints on its temporal and spatial extent.
On the contrary, the class for a generic running process does not necessarily impose maximality to its individuals. A running individual is maximal only when it extends in time for the minimum amount required to identify a running act, so every possible temporal part is always a non-running.
Following the two examples, a marathon individual is a maximal that can be decomposed into running intervals. The marathon class is a subclass of running."""@en ;
                                           skos:prefLabel "Fundamental"@en ;
                                           :EMMO_70fe84ff_99b6_4206_a9fc_9a8931836d84 "Fundamental(x) ≡ ∃φ[φ(x) ∧ ¬∃yRP⟨φ⟩(y, x)]" ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have no proper parts of the same type of the whole."@en .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
   owl:annotatedProperty skos:altLabel ;
   owl:annotatedTarget "Lifetime"@en ;
   :EMMO_705f27ae_954c_4f13_98aa_18473fc52b25 "From Middle English liftime, equivalent to life +‎ time."@en
 ] .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
   owl:annotatedProperty skos:prefLabel ;
   owl:annotatedTarget "Fundamental"@en ;
   :EMMO_705f27ae_954c_4f13_98aa_18473fc52b25 "From Latin fundamentum (“foundation”), from fundō (“to lay the foundation (of something), to found”), from fundus (“bottom”)."@en
 ] .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
   owl:annotatedProperty :EMMO_70fe84ff_99b6_4206_a9fc_9a8931836d84 ;
   owl:annotatedTarget "Fundamental(x) ≡ ∃φ[φ(x) ∧ ¬∃yRP⟨φ⟩(y, x)]" ;
   rdfs:seeAlso :EMMO_6786b336_e982_4759_8dee_1905a4106591
 ] .


###  https://w3id.org/emmo#EMMO_7f92ac53_3a89_41a4_af5c_a8ad320a7936
:EMMO_7f92ac53_3a89_41a4_af5c_a8ad320a7936 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_8f449738_cedb_436c_bdec_1c8e78bdb644 ;
                                           skos:prefLabel "NonConvergent"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have a proper parts of the same type φ of the whole, and so that for every two distinct φ proper parts one is not part of the other."@en .


###  https://w3id.org/emmo#EMMO_8f449738_cedb_436c_bdec_1c8e78bdb644
:EMMO_8f449738_cedb_436c_bdec_1c8e78bdb644 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_e95b9f89_3ffd_4ea5_b682_97c4cc191a8d ;
                                           skos:prefLabel "Nuclear"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have a proper parts of the same type of the whole that is part of all the other proper parts of the same type."@en .


###  https://w3id.org/emmo#EMMO_b4494d69_6393_4eb4_8346_7fedd4df0bc5
:EMMO_b4494d69_6393_4eb4_8346_7fedd4df0bc5 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
                                           skos:prefLabel "Maximal"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have no proper parts of the same type of the whole are not proper part of an entity of that type."@en ;
                                           :EMMO_c7b62dd7_063a_4c2a_8504_42f7264ba83f "A maximal class M (subclass of Maximal) is defined by choosing a reference type φ so that M is subclass of φ, all parts of x are needed to keep φ(x) and if you add something to x, then x is no more a φ."@en .


###  https://w3id.org/emmo#EMMO_b501a8ed_ae15_4288_9d92_1026463e95cb
:EMMO_b501a8ed_ae15_4288_9d92_1026463e95cb rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_8f449738_cedb_436c_bdec_1c8e78bdb644 ;
                                           skos:prefLabel "Convergent"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have a proper parts of the same type φ of the whole, and so that for every two distinct φ proper parts one is part of the other."@en .


###  https://w3id.org/emmo#EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0
:EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_32e701c0_a925_49df_9829_0931b8554807 ;
                                           rdfs:seeAlso :EMMO_57c75ca1_bf8a_42bc_85d9_58cfe38c7df2 ;
                                           skos:altLabel "NonMaximal"@en ;
                                           skos:example "A sufficently large volume of liquid water has parts of the same type."@en ,
                                                        """An object A which is classified as water-fluid possesses a proper part B which is water itself if the lenght scale of the B is larger than the water intermolecular distance keeping it in the continuum range. In this sense, A is redundant.

If A is a water-fluid so small that its every proper part is no more a continuum object (i.e. no more a fluid), then A is fundamental."""@en ;
                                           skos:prefLabel "Redundant"@en ;
                                           :EMMO_70fe84ff_99b6_4206_a9fc_9a8931836d84 "Redundant(x) ≡ ∃φ[φ(x) ∧ ∃yRP⟨φ⟩(y, x)]"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have parts of the same type of the whole."@en .

[ rdf:type owl:Axiom ;
   owl:annotatedSource :EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 ;
   owl:annotatedProperty :EMMO_70fe84ff_99b6_4206_a9fc_9a8931836d84 ;
   owl:annotatedTarget "Redundant(x) ≡ ∃φ[φ(x) ∧ ∃yRP⟨φ⟩(y, x)]"@en ;
   rdfs:seeAlso :EMMO_6786b336_e982_4759_8dee_1905a4106591
 ] .


###  https://w3id.org/emmo#EMMO_e95b9f89_3ffd_4ea5_b682_97c4cc191a8d
:EMMO_e95b9f89_3ffd_4ea5_b682_97c4cc191a8d rdf:type owl:Class ;
                                           rdfs:subClassOf :EMMO_bbca6dfa_7463_4e8d_8280_35862ff50ce0 ;
                                           skos:prefLabel "Multiplex"@en ;
                                           :EMMO_967080e5_2f42_4eb2_a3a9_c58143e835f9 "The superclass for all classes of entities that have a proper parts of the same type of the whole that overlaps all the oter proper parts of the same type."@en .


###  Generated by the OWL API (version 4.5.29.2024-05-13T12:11:03Z) https://github.com/owlcs/owlapi
